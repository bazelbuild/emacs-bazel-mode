#!/bin/bash

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run this script to regenerate coverage.out and coverage.dat.

set -eu

# Bazel formats output differently when invoked from Emacs.
export INSIDE_EMACS='27.2,compile'

workspace="$(bazel info workspace)" || exit
testdata="${workspace:?}/testdata"

dir="$(mktemp --directory)" || exit
trap 'rm --recursive --force -- "${dir}"' EXIT

# Set up a basic workspace layout in the temporary directory.
cp --no-target-directory -- "${testdata:?}/test.WORKSPACE" "${dir:?}/WORKSPACE"
mkdir -- "${dir:?}/package" || exit
cp --no-target-directory -- \
  "${testdata:?}/coverage.BUILD" "${dir:?}/package/BUILD" || exit
cp --target-directory="${dir:?}/package" -- \
  "${testdata:?}/library.h" "${testdata:?}/library_test.cc" || exit

execroot="$(cd "${dir:?}" && bazel --bazelrc=/dev/null info execution_root)"

# We explicitly compile with the current directory set to a subdirectory to
# ensure that workspace-relative filenames still work as expected.
out="$(cd "${dir:?}/package" && bazel --bazelrc=/dev/null coverage //... 2>&1)"

# Parse output to find location of coverage.dat.  The output should be
# relatively stable,
# cf. https://docs.bazel.build/versions/4.0.0/guide.html#parsing-output.
pattern=$'\n''  (/.+/coverage\.dat)'$'\n'
[[ "${out:?}" =~ ${pattern:?} ]] || exit
dat="${BASH_REMATCH[1]}"
cp --no-target-directory -- "${dat:?}" "${testdata:?}/coverage.dat" || exit

# Replace the execution root in the output with a placeholder.
out="${out//${execroot}/%EXECROOT%}"

echo "${out:?}" > "${testdata:?}/coverage.out"

echo 'Successfully generated coverage.out and coverage.dat.'
